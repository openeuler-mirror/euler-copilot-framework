{{- if .Values.databases.mysql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deploy-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: mysql-{{ .Release.Name }}
spec:
  replicas: {{ .Values.globals.replicaCount }}
  selector:
    matchLabels:
      app: mysql-{{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/mysql/mysql-secret.yaml") . | sha256sum }}
      labels:
        app: mysql-{{ .Release.Name }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: mysql
          image: "{{ if ne (.Values.databases.mysql.image.registry | toString ) "" }}{{ .Values.databases.mysql.image.registry }}{{ else }}{{ .Values.globals.imageRegistry }}{{ end }}/{{ .Values.databases.mysql.image.name }}:{{ .Values.databases.mysql.image.tag | toString }}"
          imagePullPolicy: {{ if ne (.Values.databases.mysql.image.imagePullPolicy | toString) "" }}{{ .Values.databases.mysql.image.imagePullPolicy }}{{ else }}{{ .Values.globals.imagePullPolicy }}{{ end }}
          args:
            - "--character-set-server=utf8mb4"
            - "--collation-server=utf8mb4_unicode_ci"
          ports:
            - containerPort: 3306
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - mysqladmin -h 127.0.0.1 -u $MYSQL_USER --password=$MYSQL_PASSWORD ping
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 90
          env:
            - name: TZ
              value: "Asia/Shanghai"
            - name: MYSQL_USER
              value: "euler_copilot"
            - name: MYSQL_RANDOM_ROOT_PASSWORD
              value: "yes"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret-{{ .Release.Name }}
                  key: mysql-password
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
            - mountPath: /docker-entrypoint-initdb.d/init.sql
              name: mysql-init
              subPath: init.sql
          resources:
            {{- toYaml .Values.databases.mysql.resources | nindent 12 }}
      restartPolicy: Always
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc-{{ .Release.Name }}
        - name: mysql-init
          secret:
            secretName: mysql-secret-{{ .Release.Name }}
{{- end }}
