{{- if .Values.databases.minio.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: {{ .Release.Namespace }}
spec:
  type: {{ default "ClusterIP" .Values.databases.minio.service.type }}
  selector:
    app: minio
  ports:
    - name: minio-data
      port: 9000
      targetPort: 9000
      nodePort: {{ default nil .Values.databases.minio.service.dataNodePort }}
    - name: minio-console
      port: 9001
      targetPort: 9001
      nodePort: {{ default nil .Values.databases.minio.service.consoleNodePort }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ingress
  namespace: {{ .Release.Namespace }}
spec:
  rules:
  - host: {{ default "minio.eulercopilot.local" .Values.domain.minioConsole }}
    http:
      paths:
      - path: {{ default "/" .Values.databases.minio.ingress.prefix }}
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9001

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deploy
  namespace: {{ .Release.Namespace }}
  labels:
    app: minio
spec:
  replicas: {{ default 1 .Values.globals.replicaCount }}
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      automountServiceAccountToken: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.globals.arch | default "x86_64" | replace "aarch64" "arm64" | quote }}
      containers:
        - name: minio
          image: {{ .Values.databases.minio.image | default (printf "hub.oepkgs.net/neocopilot/minio:%s" (include "minio.imageTag" .)) }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.globals.imagePullPolicy }}
          args:
            - "server"
            - "/data"
            - "--console-address"
            - ":9001"
          ports:
            - name: minio-data
              containerPort: 9000
              protocol: TCP
            - name: minio-console
              containerPort: 9001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
              scheme: HTTP
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 90
          env:
            - name: TZ
              value: "Asia/Shanghai"
            - name: MINIO_ROOT_USER
              value: minioadmin
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: euler-copilot-database
                  key: minio-password
          volumeMounts:
            - mountPath: "/data"
              name: minio-data
          resources:
            requests:
              cpu: 0.25
              memory: 256Mi
            limits:
              {{ toYaml .Values.databases.minio.resourceLimits | nindent 14 }}
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: minio-storage
{{- end -}}

{{- define "minio.imageTag" -}}
  {{- $arch := .Values.globals.arch | default "x86_64" -}}
  {{- if eq $arch "aarch64" -}}empty-arm
  {{- else if eq $arch "x86_64" -}}empty-x86
  {{- else -}}empty
  {{- end -}}
{{- end -}
