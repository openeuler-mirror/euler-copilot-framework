{{- if .Values.witchaind.minio.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deploy-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: minio-{{ .Release.Name }}
spec:
  replicas: {{ .Values.globals.replicaCount }}
  selector:
    matchLabels:
      app: minio-{{ .Release.Name }}
  template:
    metadata:
      labels:
        app: minio-{{ .Release.Name }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: minio
          image: "{{if ne ( .Values.witchaind.minio.image.registry | toString ) ""}}{{ .Values.witchaind.minio.image.registry }}{{ else }}{{ .Values.globals.imageRegistry }}{{ end }}/{{ .Values.witchaind.minio.image.name }}:{{ .Values.witchaind.minio.image.tag | toString }}"
          imagePullPolicy: {{ if ne ( .Values.witchaind.minio.image.imagePullPolicy | toString ) "" }}{{ .Values.witchaind.minio.image.imagePullPolicy }}{{ else }}{{ .Values.globals.imagePullPolicy }}{{ end }}
          args:
            - "server"
            - "/data"
          ports:
            - containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
              scheme: HTTP
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 90
          env:
            - name: TZ
              value: "Asia/Shanghai"
          volumeMounts:
            - mountPath: "/data"
              name: minio-data
          resources:
            {{- toYaml .Values.witchaind.minio.resources | nindent 12 }}
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: minio-pvc-{{ .Release.Name }}
{{- end }}
